version: '2'

services:
  web:
    image: nginx:latest
    logging:
      driver: journald
    ports:
      - "80:80"
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf
      - ./web/nginx.conf.d:/etc/nginx/nginx.conf.d
      - /data/old/www:/var/www
    networks:
      - eltewms-network

  php:
    build: './php'
    logging:
      driver: journald
    volumes:
      - /data/old/www:/var/www/html
    networks:
      - eltewms-network

  mapserver:
    build: './mapserver'
    logging:
      driver: journald
    volumes:
      - /data/mapserver:/var/mapfiles
    networks:
      - eltewms-network

  postgres:
    build: './postgres'
    logging:
      driver: journald
    ports:
      - "5432:5432"
    volumes:
      - /data/pgdata:/var/lib/postgresql/data
    networks:
      - eltewms-network

  mysql:
    image: vsamov/mysql-5.1.73
    logging:
      driver: journald
    volumes:
      - /data/old/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - eltewms-network

  phppgadmin:
    image: zhajor/docker-phppgadmin
    logging:
      driver: journald
    ports:
      - "8080:80"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
    networks:
      - eltewms-network

  osmupdate:
    build: kartoza-docker-osm/docker-osmupdate
    container_name: dockerosm_osmupdate
    logging:
      driver: journald
    environment:
      - MAX_DAYS=100 # Maximum az utolsó N frissítés letöltése
      - DIFF=day
      - MAX_MERGE=7
      - COMPRESSION_LEVEL=1
      - BASE_URL=http://download.geofabrik.de/europe/hungary-updates/ # Innen húzza le az OSM frissítéseket
      - IMPORT_QUEUE=/osm/import_queue # Ezek a "volumes"-nál szereplő értékeknek feleljenek meg
      - IMPORT_DONE=/osm/import_done
      - SETTINGS=/osm/settings
      - TIME=86400  # Naponta frissítsen
    networks:
      - eltewms-network
    volumes:
      - /data/osm/import_queue:/osm/import_queue
      - /data/osm/import_done:/osm/import_done
      - /data/osm/settings:/osm/settings

  imposm:
    build: kartoza-docker-osm/docker-imposm3
    container_name: dockerosm_imposm
    logging:
      driver: journald
    environment:
      - USER=docker
      - PASSWORD=docker
      - PORT=5432
      - HOST=db
      - DATABASE=gis
      # seconds between 2 executions of the script
      - TIME=86400
      # folder for settings (with *.json and *.sql)
      - SETTINGS=/osm/settings
      # folder for caching
      - CACHE=/osm/cache
      # folder for diff which has been imported
      - IMPORT_DONE=/osm/import_done
      # folder for diff which hasn't been imported yet
      - IMPORT_QUEUE=/osm/import_queue
      # it can be 3857
      - SRID=4326
      # see http://imposm.org/docs/imposm3/latest/tutorial.html#optimize
      - OPTIMIZE=true
      # see http://imposm.org/docs/imposm3/latest/tutorial.html#deploy-production-tables
      - DBSCHEMA_PRODUCTION=public
      # http://imposm.org/docs/imposm3/latest/tutorial.html#deploy-production-tables
      - DBSCHEMA_IMPORT=import
      # http://imposm.org/docs/imposm3/latest/tutorial.html#deploy-production-tables
      - DBSCHEMA_BACKUP=backup
      # Install some styles if you are using the default mapping. It can be 'yes' or 'no'
      - QGIS_STYLE=yes
      # Use clip in the database
      - CLIP=no
    networks:
      - eltewms-network
    volumes:
      - /data/osm/import_queue:/osm/import_queue
      - /data/osm/import_done:/osm/import_done
      - /data/osm/settings:/osm/settings
      - /data/osm/cache:/osm/cache


networks:
  eltewms-network:
    driver: bridge
